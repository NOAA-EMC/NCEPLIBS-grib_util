# This is the GitHub actions workflow for building grib_utils with GNU using
# spack for dependencies.
#
# Ed Hartnett, 12/19/22
name: spack
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

# Use custom shell with -l so .bash_profile is sourced
# without having to do it in manually every step
defaults:
  run:
    shell: bash -leo pipefail {0}

env:
  cache_key: gcc3  # The number (#) following the cache_key "gcc" is to flush Action cache.
  CC: gcc-10
  FC: gfortran-10
  CXX: g++-10

# A note on flushing Action cache and relevance to "cache_key" above.
# There is no way to flush the Action cache, and hence a number (#) is appended
# to the "cache_key" (gcc).
# If the dependencies change, increment this number and a new cache will be
# generated by the dependency build step "spack-setup"
# There is a Github issue to force clear the cache.
# See discussion on:
# https://stackoverflow.com/questions/63521430/clear-cache-in-github-actions

# The jobs are split into:
# 1. a dependency build step (spack-setup), and
# 2. a UPP build step (spack-build)
# The setup is run once and the environment is cached,
# so each build of UPP can reuse the cached dependencies to save time (and compute).

jobs:
  spack-setup:
    runs-on: ubuntu-latest

    steps:
      - name: checkout-grib_utils  # This is for getting spack.yaml
        uses: actions/checkout@v2
        with:
            path: grib_utils

      # Cache spack, compiler and dependencies
      - name: cache-env
        id: cache-env
        uses: actions/cache@v2
        with:
          path: |
            spack
            ~/.spack
          key: spack-${{ runner.os }}-${{ env.cache_key }}-${{ hashFiles('grib_utils/ci/spack.yaml') }}

      # Install dependencies using Spack
      - name: install-dependencies-with-spack
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          git clone -c feature.manyFiles=true https://github.com/spack/spack.git
          source spack/share/spack/setup-env.sh
          spack env create grib_utils-env grib_utils/ci/spack.yaml
          spack env activate grib_utils-env
          spack external find --all
          spack concretize
          spack install -v --fail-fast --dirty
          spack clean -a

  spack-build:
    needs: spack-setup
    runs-on: ubuntu-latest

    steps:
      - name: checkout-grib_utils
        uses: actions/checkout@v2
        with:
            path: grib_utils
            submodules: true

      - name: cache-env
        id: cache-env
        uses: actions/cache@v2
        with:
          path: |
            spack
            ~/.spack
          key: spack-${{ runner.os }}-${{ env.cache_key }}-${{ hashFiles('grib_utils/ci/spack.yaml') }}

      - name: build-grib_utils
        run: |
          source spack/share/spack/setup-env.sh
          spack env activate grib_utils-env
          cd grib_utils
          mkdir -p build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=../install ..
          make -j2 VERBOSE=1
          ctest --output-on-failure --rerun-failed --verbose
          make install
